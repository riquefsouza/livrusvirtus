package  Livrus;

import System.*;
import System.Windows.Forms.*;
import System.Data.*;
import System.Data.OleDb.*;
import System.Collections.*;

  public class RotinasGlobais
  {
  	public static RotinasGlobais Rotinas;
  	public String sUsuarioLogin, sUsuarioSenha;
  	public String sCodigoSelecionado, sPreco, sQtdEstoque;
  
  	public RotinasGlobais()
  	{

  	}

//---------------------------------------------------------------------------
public boolean ValidaInteger(String sNum)
{
 if (sNum.Equals("")==false) {
	try {
	  Int32.Parse(sNum);
	  return true;
	} catch(System.Exception e) {
	  MessageBox.Show("Número inválido!", "Erro",
	  MessageBoxButtons.OK,MessageBoxIcon.Error);
	  return false;
	}
 } else
   return false;
}
//---------------------------------------------------------------------------
public boolean ValidaFloat(String sNum)
{
 if (sNum.Equals("")==false) {
	try {
	  Single.Parse(sNum);
	  return true;
	} catch(System.Exception e) {
	  MessageBox.Show("Número inválido!", "Erro",
	  MessageBoxButtons.OK,MessageBoxIcon.Error);
	  return false;
	}
 } else
   return false;
}
//---------------------------------------------------------------------------
public String VirgulaParaPonto(String sNum, boolean revertido)
{
 if (revertido)
   return sNum.Replace(".",",");
 else
   return sNum.Replace(",",".");
}
//---------------------------------------------------------------------------
public int modulo11(String svalor, int ndig)
{
int ncont, nsoma, nvalor, npos;
String slocal, sres;

 ncont=0;
 slocal="";
 while (ncont < 11) {
   slocal=svalor.Substring(ncont,1) + slocal;
   ncont++;
 }
 nsoma=0;
 if (ndig == 1)
   ncont=2;
 else
   ncont=1;
 npos=2;
 while (ncont < 11) {
   sres = slocal.Substring(ncont,1);
   nvalor = Int32.Parse(sres);
   nsoma=nsoma + (nvalor * npos);
   ncont++;
   npos++;
 }
 nsoma=(11 - (nsoma % 11));

 if (nsoma > 9)
   return 0;
 else
   return nsoma;
}
//---------------------------------------------------------------------------
public boolean ValidaCPF(String cpf)
{
String scpf;

if (cpf.get_Length()==14) {
  scpf=cpf.Substring(0,3)+cpf.Substring(4,3)+cpf.Substring(8,3)+
	cpf.Substring(12,2);
  if ( (modulo11(scpf,1)==Int32.Parse(cpf.Substring(12,1))) &&
  (modulo11(scpf,2)==Int32.Parse(cpf.Substring(13,1))) )
	return true;
  else
	return false;
} else
  return false;
}
//---------------------------------------------------------------------------
public boolean ValidaISBN(String isbn)
{
 String sisbn, sdigito, snum;
 int nvalor, nsoma, ncont;

if (isbn.get_Length()==13) {
  sdigito = isbn.Substring(isbn.get_Length()-1, 1);
  sisbn="";
  for(ncont = 0; ncont < isbn.get_Length()-1; ncont++)  {
    if (isbn.Substring(ncont,1).Equals("-")==false)
      sisbn = sisbn + isbn.Substring(ncont,1);
  }
  if (sdigito.Equals("X"))
    nsoma = 10;
  else {
    nvalor = Int32.Parse(sdigito);
    nsoma = nvalor;
  }
  for(ncont = 1; ncont <= 9; ncont++)  {
    snum = sisbn.Substring(ncont-1, 1);
    nvalor = Int32.Parse(snum);
    nsoma=nsoma + (nvalor * (11 - ncont));
  }
  if ((nsoma % 11) == 0)
    return true;
  else
    return false;
} else
  return false;
}
//---------------------------------------------------------------------------
public boolean ConsultaDados(OleDbCommand Consulta, String sTextoSql)
{
boolean nTemLinhas = false;

  Consulta = frmPrincipal.fPrincipal.db.CreateCommand();
  Consulta.set_CommandText(sTextoSql);

  OleDbDataReader Leitor = Consulta.ExecuteReader();
  nTemLinhas = Leitor.get_HasRows();
  Leitor.Close();
  return nTemLinhas;

}
//---------------------------------------------------------------------------
public boolean ConsultaDados(DataSet dsConsulta, ArrayList Registros, String sTextoSql)
{
boolean nTemLinhas = false;

  dsConsulta.Clear();
  OleDbCommand Consulta = new OleDbCommand();
  OleDbDataAdapter daConsulta = new OleDbDataAdapter();

  daConsulta.get_TableMappings().Add("Table","Consulta");
  Consulta = frmPrincipal.fPrincipal.db.CreateCommand();
  Consulta.set_CommandText(sTextoSql);
  daConsulta.set_SelectCommand(Consulta);
  daConsulta.Fill(dsConsulta);

  Registros.Clear();
  OleDbDataReader Leitor = Consulta.ExecuteReader();
  while (Leitor.Read()) {
	 ArrayList Campos = new ArrayList();
	 for(int cont=0; cont < Leitor.get_FieldCount(); cont++) {
	   Campos.Add(Leitor.GetValue(cont).ToString());
	 }
	 Registros.Add(Campos);
  }
  nTemLinhas = Leitor.get_HasRows();
  Leitor.Close();
  return nTemLinhas;

}
//---------------------------------------------------------------------------
public boolean ConsultaDados(ArrayList Registros, String sTextoSql)
{
boolean nTemLinhas = false;

  OleDbCommand Consulta = frmPrincipal.fPrincipal.db.CreateCommand();
  Consulta.set_CommandText(sTextoSql);

  Registros.Clear();
  OleDbDataReader Leitor = Consulta.ExecuteReader();
  while (Leitor.Read()) {
	 ArrayList Campos = new ArrayList();
	 for(int cont=0; cont < Leitor.get_FieldCount(); cont++) {
	   Campos.Add(Leitor.GetValue(cont).ToString());
	 }
	 Registros.Add(Campos);
  }
  nTemLinhas = Leitor.get_HasRows();
  Leitor.Close();
  return nTemLinhas;

}
//---------------------------------------------------------------------------
public boolean ValidaCampo(String sCampo,String sMensagemErro)
{
  if (sCampo.get_Length() == 0) {
	MessageBox.Show(sMensagemErro, "Erro",
	MessageBoxButtons.OK,MessageBoxIcon.Error);
	return true;
  } else
	return false;
}
//---------------------------------------------------------------------------
public String ConsultaCampoDesc(ArrayList Campos,
				String sTextoSql, String sMensagemErro)
{

  OleDbCommand Consulta = frmPrincipal.fPrincipal.db.CreateCommand();
  Consulta.set_CommandText(sTextoSql);

  Campos.Clear();
  OleDbDataReader Leitor = Consulta.ExecuteReader();
  if (Leitor.Read()) {
	 for(int cont=0; cont < Leitor.get_FieldCount(); cont++) {
	   Campos.Add(Leitor.GetValue(cont).ToString());
	 }
  }
  boolean nTemLinhas = Leitor.get_HasRows();
  Leitor.Close();

  if (nTemLinhas)
	 return Campos.get_Item(1).ToString();
  else {
	MessageBox.Show(sMensagemErro, "Erro",
	MessageBoxButtons.OK,MessageBoxIcon.Error);
	return "";
  }
}
//---------------------------------------------------------------------------
public String ConsultaCampoDesc(ArrayList Campos,
		  String sCampoCodigo,String sTextoSql,String sMensagemErro)
{
if (ValidaInteger(sCampoCodigo))
  return ConsultaCampoDesc(Campos, sTextoSql, sMensagemErro);
else
  return "";
}
//---------------------------------------------------------------------------
  public String retDataStr(DateTime sData, String formato) {
	return sData.ToString(formato);
  }
//---------------------------------------------------------------------------
  public String FormataDataStr(String sData, String formato) {
	DateTime dtNasc = DateTime.Parse(sData);
	return dtNasc.ToString(formato);
  }

//---------------------------------------------------------------------------
public void AdicionaItemLista(ListBox lstLista,
	 ArrayList slCodLista, TextBox sCampoCodigo, TextBox sCampoDesc)
{
String sItems;

if (sCampoDesc.get_Text().Equals("")==false) {
 sItems=sCampoCodigo.get_Text()+" - "+sCampoDesc.get_Text();
 if (lstLista.get_Items().IndexOf(sItems)==-1) {
	slCodLista.Add(sCampoCodigo.get_Text());
	lstLista.get_Items().Add(sItems);
 }
 sCampoCodigo.Clear();
 sCampoDesc.Clear();
}
}
//---------------------------------------------------------------------------
public void RemoveItemLista(ListBox lstLista, ArrayList slCodLista)
{
 if (lstLista.get_Items().get_Count() > 0) {
   slCodLista.RemoveAt(lstLista.get_SelectedIndex());
   lstLista.get_Items().RemoveAt(lstLista.get_SelectedIndex());
 }
}
//---------------------------------------------------------------------------
public void AdicionaValoresLista(ArrayList ConsLista,
	 String sTextoSql,ListBox lstLista, ArrayList slCodLista)
{
 ConsLista.Clear();
 lstLista.get_Items().Clear();
 slCodLista.Clear();

  OleDbCommand Consulta = frmPrincipal.fPrincipal.db.CreateCommand();
  Consulta.set_CommandText(sTextoSql);

  OleDbDataReader Leitor = Consulta.ExecuteReader();
  while (Leitor.Read()) {
	  slCodLista.Add(Leitor.GetValue(0).ToString());
	  lstLista.get_Items().Add(Leitor.GetValue(0).ToString()+" - "+
	  Leitor.GetValue(1).ToString());
  }
  Leitor.Close();

}
//---------------------------------------------------------------------------

}

