//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "RotinasGlobais.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
TRotinasGlobais *Rotinas;
//---------------------------------------------------------------------------
__fastcall TRotinasGlobais::TRotinasGlobais()
        : TObject()
{
}
//---------------------------------------------------------------------------
Boolean TRotinasGlobais::ValidaInteger(AnsiString sNum)
{
 if (sNum!="") {
    try {
      StrToInt(sNum);
      return true;
    } catch (Exception &exception) {
      MessageDlg("Número inválido!", mtError, TMsgDlgButtons() << mbOK, 0);
      return false;
    }
 } else
   return false;
}
//---------------------------------------------------------------------------
Boolean TRotinasGlobais::ValidaFloat(AnsiString sNum)
{
 if (sNum!="") {
    try {
      StrToFloat(sNum);
      return true;
    } catch (Exception &exception) {
      MessageDlg("Número inválido!", mtError, TMsgDlgButtons() << mbOK, 0);
      return false;
    }
 } else
   return false;
}
//---------------------------------------------------------------------------
AnsiString TRotinasGlobais::VirgulaParaPonto(AnsiString sNum)
{
 return StringReplace(sNum,",",".",TReplaceFlags() << rfReplaceAll);
}
//---------------------------------------------------------------------------
int TRotinasGlobais::modulo11(AnsiString valor, int dig, Boolean cond)
{
int cont, soma, num, ret, ndig;

ndig=0;
soma=0;
switch (dig) {
 case 1:{
      num=10;
      for(cont=1; cont<=valor.Length(); cont++) {
        soma=soma+(num*StrToInt(valor.SubString(cont,1)));
        num=num-1;
      }
 } break;
 case 2: soma=modulo11(valor,1,false)+(modulo11(valor,1,true)*2);
 break;
}
if (cond==true) {
  ret=(soma % 11);
  if ((ret==0) || (ret==1)) 
    ndig=0;
  else if (ret > 1) 
    ndig=(11-ret);
  return ndig;
} else
   return soma;
}
//---------------------------------------------------------------------------
Boolean TRotinasGlobais::ValidaCPF(AnsiString cpf)
{
AnsiString scpf;

if (cpf.Length()==14) {
  scpf=cpf.SubString(1,3)+cpf.SubString(5,3)+cpf.SubString(9,3);
  if ( (modulo11(scpf,1,true)==StrToInt(cpf.SubString(13,1))) &&
  (modulo11(scpf,2,true)==StrToInt(cpf.SubString(14,1))) )
    return true;
  else
    return false;
} else
  return false;
}
//---------------------------------------------------------------------------
Boolean TRotinasGlobais::ValidaISBN(AnsiString isbn)
{
AnsiString sisbn;
int cont;

if (isbn.Length()==13) {
  sisbn="";
  for(cont=1;cont<=isbn.Length()-1;cont++) {
    if (isbn.SubString(cont,1)!="-")
      sisbn=sisbn+isbn.SubString(cont,1);
  }
  cont=modulo11(sisbn,1,true);
  if (cont==0) {
    if (isbn.SubString(13,1)=="X") 
      return true;
    else
      return false;
  } else {
    if (cont==StrToInt(isbn.SubString(13,1))) 
      return true;
    else
      return false;
  }
} else
  return false;
}
//---------------------------------------------------------------------------
Boolean TRotinasGlobais::ConsultaDados(TADOQuery *Consulta, AnsiString sTextoSql)
{
  Consulta->Close();
  Consulta->SQL->Text=sTextoSql;
  Consulta->Open();
  return !(Consulta->IsEmpty());
}
//---------------------------------------------------------------------------
Boolean TRotinasGlobais::ValidaCampo(AnsiString sCampo,AnsiString sMensagemErro)
{
  if (sCampo=="") {
    MessageDlg(sMensagemErro, mtInformation, TMsgDlgButtons() << mbOK, 0);
    return true;
  } else
    return false;
}
//---------------------------------------------------------------------------
AnsiString TRotinasGlobais::ConsultaCampoDesc(TADOQuery *Consulta,
           AnsiString sTextoSql, AnsiString sMensagemErro)
{
  if (ConsultaDados(Consulta, sTextoSql)) 
     return Consulta->Fields->Fields[1]->AsString;
  else {
    MessageDlg(sMensagemErro, mtError, TMsgDlgButtons() << mbOK, 0);
    return "";
  }
}
//---------------------------------------------------------------------------
AnsiString TRotinasGlobais::ConsultaCampoDesc(TADOQuery *Consulta,
          AnsiString sCampoCodigo,AnsiString sTextoSql,AnsiString sMensagemErro)
{
if (Rotinas->ValidaInteger(sCampoCodigo))
  return ConsultaCampoDesc(Consulta, sTextoSql, sMensagemErro);
else
  return "";
}
//---------------------------------------------------------------------------
void TRotinasGlobais::AdicionaItemLista(TListBox *lstLista,
     TStringList *slCodLista, TEdit *sCampoCodigo, TEdit *sCampoDesc)
{
AnsiString sItems;

if (sCampoDesc->Text!="") {
 sItems=sCampoCodigo->Text+" - "+sCampoDesc->Text;
 if (lstLista->Items->IndexOf(sItems)==-1) {
    slCodLista->Append(sCampoCodigo->Text);
    lstLista->Items->Append(sItems);
 }
 sCampoCodigo->Clear();
 sCampoDesc->Clear();
}
}
//---------------------------------------------------------------------------
void TRotinasGlobais::RemoveItemLista(TListBox *lstLista,
                                      TStringList *slCodLista)
{
 if (lstLista->Items->Count > 0) {
   slCodLista->Delete(lstLista->ItemIndex);
   lstLista->Items->Delete(lstLista->ItemIndex);
 }
}
//---------------------------------------------------------------------------
void TRotinasGlobais::AdicionaValoresLista(TADOQuery *ConsLista,
     AnsiString sTextoSql,TListBox *lstLista, TStringList *slCodLista)
{
 ConsLista->Close();
 lstLista->Clear();
 slCodLista->Clear();
 ConsLista->SQL->Text=sTextoSql;
 ConsLista->Open();
 while (!ConsLista->Eof) {
  slCodLista->Append(ConsLista->Fields->Fields[0]->AsString);
  lstLista->Items->Append(ConsLista->Fields->Fields[0]->AsString+" - "+
  ConsLista->Fields->Fields[1]->AsString);
  ConsLista->Next();
 }
}
//---------------------------------------------------------------------------
void TRotinasGlobais::ChamarTela(TForm *Tela)
{
  Tela->BorderStyle=bsSingle;
  Tela->FormStyle=fsMDIChild;
  Tela->Position=poDefault;
  Tela->Show();
}
//---------------------------------------------------------------------------
